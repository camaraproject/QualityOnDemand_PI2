# Swagger UI
quarkus.swagger-ui.enable=true
quarkus.swagger-ui.always-include=true
# Global Server configuration
# Be aware servlet.context-path is relative to http.root-path
quarkus.http.root-path=qod/v0
quarkus.http.port=8080
quarkus.application.name=camara-qod
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
camara.notifications.base-url=http://localhost:8080/qod/v0/notifications

# Log configuration
%dev.quarkus.log.level=FINEST
%dev.quarkus.log.category."jakarta.net.ssl".level=FINEST
%dev.quarkus.log.category."io.quarkus.oidc.client.runtime.OidcClientImpl".level=TRACE
%dev.quarkus.log.category."io.quarkus.oidc.client.runtime.OidcClientRecorder".level=TRACE
%dev.quarkus.log.category."io.quarkus.oidc.client.filter.OidcClientRequestFilter".level=TRACE
%dev.quarkus.log.category."io.quarkus.oidc.client.filter.OidcClientResponseFilter".level=TRACE
%dev.quarkus.log.category."org.jboss.resteasy.client".level=FINEST
%dev.quarkus.log.category."io.quarkus.redis".level=FINEST
%dev.quarkus.rest-client.logging.scope=request-response
%dev.quarkus.rest-client.logging.body-limit=1024
%local.quarkus.log.level=FINEST
%local.quarkus.log.category."io.quarkiverse.vault".level=FINEST
%local.quarkus.rest-client.logging.scope=request-response
%local.quarkus.rest-client.logging.body-limit=1024
# Secrets from redis deployment use kubernetes-config extension
%prod.quarkus.kubernetes-config.secrets.enabled=true
%prod.quarkus.kubernetes-config.secrets=red-orange-redis-client
%prod.quarkus.kubernetes-config.namespace=camara-api
%local.quarkus.kubernetes-config.secrets.enabled=true
%local.quarkus.kubernetes-config.secrets=red-orange-redis-client
%local.quarkus.kubernetes-config.namespace=camara-api
# Redis config
%prod.quarkus.redis.hosts=redis://${REDIS_CLIENTUSERNAME}:${REDIS_CLIENTPASSWORD}@${REDIS_HOST}:${REDIS_PORT}
%local.quarkus.redis.hosts=redis://${REDIS_CLIENTUSERNAME}:${REDIS_CLIENTPASSWORD}@${REDIS_HOST}:${REDIS_PORT}
# CORS configuration
quarkus.http.cors.origins="https://api.orange.com/qod/"
quarkus.http.cors.headers=""
quarkus.http.cors.exposed-headers=""
quarkus.http.cors.access-control-allow-credentials=false
quarkus.rest-client."com.camara.scef.ScefClient".url=https://inside01.api.intraorange/3gpp-as-session-with-qos/v1/ODI_ServTestQ8QoS_Server
quarkus.oidc-client.token-path=https://inside01.api.orange.com/oauth/v3/token
# Client and Proxy for openshift
%prod.quarkus.rest-client.proxy-address=cs.pr-proxy.service.sd.diod.tech:3128
%prod.quarkus.rest-client.non-proxy-hosts=${REDIS_HOST}
%prod.quarkus.oidc-client.proxy.host=cs.pr-proxy.service.sd.diod.tech
%prod.quarkus.oidc-client.proxy.port=3128
%prod.quarkus.vault.proxy-host=cs.pr-proxy.service.sd.diod.tech
%prod.quarkus.vault.proxy-port=3128
quarkus.oidc-client.grant.type=client
quarkus.oidc-client.client-id=${CLIENT_ID}
quarkus.oidc-client.credentials.secret=${CLIENT_SECRET}
# Basic Authentication
quarkus.http.auth.basic=true
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true
## OrangeDevPortal
%dev.quarkus.security.users.embedded.users.OrangeDevPortal=password
%prod.quarkus.security.users.embedded.users.OrangeDevPortal=${OD_PWD}
quarkus.security.users.embedded.roles.OrangeDevPortal=OrangeDevPortal
## admin
%dev.quarkus.security.users.embedded.users.admin=password
%prod.quarkus.security.users.embedded.users.admin=${ADMIN_PWD}
quarkus.security.users.embedded.roles.admin=admin
## sessions and qosProfiles Access Configuration
%prod.quarkus.http.auth.policy.OrangeDevPortal-policy.roles-allowed=OrangeDevPortal,admin
%prod.quarkus.http.auth.permission.role-OrangeDevPortal.paths=sessions,sessions/*,qosProfiles,qosProfiles/*
%prod.quarkus.http.auth.permission.role-OrangeDevPortal.policy=OrangeDevPortal-policy
%dev.quarkus.http.auth.policy.OrangeDevPortal-policy.roles-allowed=OrangeDevPortal,admin
%dev.quarkus.http.auth.permission.role-OrangeDevPortal.paths=sessions,sessions/*,qosProfiles,qosProfiles/*
%dev.quarkus.http.auth.permission.role-OrangeDevPortal.policy=OrangeDevPortal-policy
## admin Access Configuration
%prod.quarkus.http.auth.policy.admin-policy.roles-allowed=admin
%prod.quarkus.http.auth.permission.role-admin.paths=admin/profiles,admin/profiles/*
%prod.quarkus.http.auth.permission.role-admin.policy=admin-policy
%dev.quarkus.http.auth.policy.admin-policy.roles-allowed=admin
%dev.quarkus.http.auth.permission.role-admin.paths=admin/profiles,admin/profiles/*
%dev.quarkus.http.auth.permission.role-admin.policy=admin-policy
# Secrets retrieved via vault server
## vault server
%prod.quarkus.vault.url=https://vault.secrets.tech.orange
%prod.quarkus.vault.kv-secret-engine-version=2
%prod.quarkus.vault.kv-secret-engine-mount-path=secret2
%local.quarkus.vault.url=https://vault.secrets.tech.orange
%local.quarkus.vault.kv-secret-engine-version=2
%local.quarkus.vault.kv-secret-engine-mount-path=secret2
## vault authentication using role-id et role-secret-id (read from pod env)
%prod.quarkus.vault.authentication.app-role.role-id=${ROLE_ID}
%prod.quarkus.vault.authentication.app-role.secret-id=${ROLE_SECRET_ID}
%local.quarkus.vault.authentication.app-role.role-id=${ROLE_ID}
%local.quarkus.vault.authentication.app-role.secret-id=${ROLE_SECRET_ID}
## paths within the kv secret engine where are located the vault secrets to read
secret.prefix=2f0d99e7d22dbd5ffd78bb699fabc1bf/camara/qod
%prod.quarkus.vault.secret-config-kv-path=${secret.prefix}/CLIENT_ID,${secret.prefix}/CLIENT_SECRET,${secret.prefix}/OD_PWD,${secret.prefix}/ADMIN_PWD
%prod.quarkus.vault.renew-grace-period=60
%local.quarkus.vault.secret-config-kv-path=${secret.prefix}/CLIENT_ID,${secret.prefix}/CLIENT_SECRET,${secret.prefix}/OD_PWD,${secret.prefix}/ADMIN_PWD
%local.quarkus.vault.renew-grace-period=60
%prod.quarkus.vault.mp-config-initial-attempts=3
